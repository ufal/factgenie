api_provider: openai
model: gpt-4o-mini-2024-07-18
system_msg: "You are an expert data-to-text error annotation system. You undestand structured data and you can correcly operate with units and numerical values. You are designed to output token-level annotations in JSON."
model_args:
  max_tokens: 1024
  temperature: 0.0
  seed: 42
annotation_span_categories:
  - name: "Incorrect"
    color: "rgb(214, 39, 40)"
    description: "The fact in the text contradicts the data."
  - name: "Not checkable"
    color: "rgb(148, 103, 189)"
    description: "The fact in the text cannot be checked given the data."
  - name: "Misleading"
    color: "rgb(230, 171, 2)"
    description: "The fact in the text is misleading in the given context."
  - name: "Other"
    color: "rgb(102, 102, 102)"
    description: "The text is problematic for another reason, e.g. grammatically or stylistically incorrect, irrelevant, or repetitive."
annotation_overlap_allowed: true
prompt_strat: default
prompt_template: |
  Given the data:
  ```
  {data}
  ```
  Annotate all the errors in the following text:
  ```
  {text}
  ```
  Output the errors as a JSON list "annotations" in which each object contains fields  "reason", "text", and "annotation_type". The value of "text" is the text of the error. The value of "reason" is the reason for the error. The value of "annotation_type" is one of {0, 1, 2, 3} based on the following list:
  - 0: Incorrect fact: The fact in the text contradicts the data.
  - 1: Not checkable: The fact in the text cannot be checked in the data.
  - 2: Misleading: The fact in the text is misleading in the given context.
  - 3: Other: The text is problematic for another reason, e.g. grammatically or stylistically incorrect, irrelevant, or repetitive.

  The list should be sorted by the position of the error in the text. Make sure that the annotations are not overlapping.

  *Example:*
  data:
  ```
  Nokia 3310
  -----
  - **color**: black, blue, grey
  - **display**: 320x240px
  ```
  text (product description):
  ```
  Nokia 3310 is produced in Finland and features a 320x320 display. It is available in black color. The data seem to provide only partial information about the phone.
  ```
  output:
  ```{ "annotations": [{"reason": "The country where the phone is produced is not mentioned in the data.", "text": "produced in Finland", "annotation_type": 1}, {"reason": "The data mentions that the display has resolution 320x240px.", "text": "320x320", "annotation_type": 0}, {"reason": "Misleadingly suggests that the phone is not available in other colors.", "text": "available in black color", "annotation_type": 2}, {"reason": "The note is irrelevant for the phone description.", "text": "The data seem to provide only partial information about the phone.", "annotation_type": 3}] }
  ```
  Note that some details may not be mentioned in the text: do not count omissions as errors. Also do not be too strict: some facts can be less specific than in the data (rounded values, shortened or abbreviated text, etc.), do not count these as errors. If there are no errors in the text, "annotations" will be an empty list.
